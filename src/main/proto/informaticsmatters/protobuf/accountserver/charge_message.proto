syntax = "proto3";

package informaticsmatters.protobuf.accountserver;

enum OperationEnum {
  OPERATION_ENUM_UNSPECIFIED = 0;
  OPERATION_ENUM_STORAGE = 1;
  OPERATION_ENUM_PROCESSING = 2;
  OPERATION_ENUM_MEMORY = 3;
}

// A Charge message.
// A sequence of charges (for a given authorisation code)
// starts with a ChargeBegin message
// and ends with a ChargeEnd message.
message ChargeMessage {
  // Fields 1..15
  //
  // Messages typically contain an origin time-stamp.
  // An ISO8601 UTC string of the form: 2021-12-31T00:00:00.000000Z
  string timestamp = 1;
  string subject = 2;
  // To be accepted charges need an authorisation code.
  string auth_code = 3;

  // What's the operation being charged,
  // and what's the subject being charged?
  // The subject may be something like a Data Manager Instance UUID.
  OperationEnum operation = 4;

  // The coin value.
  // A string representation of a floating-point number,
  // typically a Python Decimal rather than a float (to avoid any transmission
  // or translation precision errors). Financial information should always
  // be passed using a decimal representation.
  string value = 5;

  // A sequence number (to provide de-duplication)
  uint32 sqn = 6;
  // The user (name) responsible for the charge.
  string user = 7;

  // Fields 16..2047

  // The Product (or Unit) providing the funds.
  // One of Product or Unit must be provided but not necessarily both.
  string product_id = 16;
  string unit_id = 17;

  // Any charge-specific additional material.
  // If used this should be a string representation of
  // a dictionary/map. The keys and values are not
  // interpreted, they're simply passed-on verbatim.
  string additional_data = 18;
  // If an authorisation reference is available that can be provided.
  string auth_ref = 19;
}
